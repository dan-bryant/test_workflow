name: VS2022 X64 CMD CI Build

on:
  workflow_dispatch: # Allows the workflow to be triggered manually

jobs:
  install:
    runs-on: windows-2022 # Use the Windows Server 2022 runner
    defaults:
      run:
        shell: cmd        
    steps:
      # - name: Clone Repo
      #   env:
      #     EDK2_PATH: D:\EDK2
      #   run: git clone --recurse-submodules https://github.com/tianocore/edk2.git %EDK2_PATH%

      # - name: Install NASM
      #   run: choco install nasm -y

      # - name: Install IASL
      #   run: choco install iasl -y

      # - name: Find IASL
      #   env:
      #     IASL_PREFIX: C:\ProgramData\chocolatey\bin\
      #   run: dir /s/b "%IASL_PREFIX%\iasl.exe"

      # - name: Find CLANG
      #   env:
      #     CLANG_BIN: C:\Program Files\LLVM\bin\
      #   run: dir /s/b "%CLANG_BIN%\clang.exe"

      # - name: Find NASM
      #   env:
      #     NASM_PREFIX: C:\Program Files\NASM\
      #   run: dir /s/b "%NASM_PREFIX%\nasm.exe"
      
      # - name: Create VENV
      #   env:
      #     VENV: D:\VENV
      #   run: python -m venv %VENV%

      # - name: Upgrade pip
      #   env:
      #     PYTHON_COMMAND: D:\VENV\Scripts\python.exe
      #   run: D:\VENV\Scripts\python.exe -m pip install --upgrade pip

      # - name: Install Requirements
      #   env:
      #     PYTHON_COMMAND: D:\VENV\Scripts\python.exe
      #     EDK2_PATH: D:\EDK2
      #   run: D:\VENV\Scripts\python.exe -m pip install -r "%EDK2_PATH%\pip-requirements.txt"

      - name: savegame
        env:
          IASL_PREFIX: C:\ProgramData\chocolatey\bin\
          CLANG_BIN: C:\Program Files\LLVM\bin\
          NASM_PREFIX: C:\Program Files\NASM\
          VENV: D:\VENV
          PYTHON_PATH: D:\VENV\Scripts
          PYTHON_COMMAND: D:\VENV\Scripts\python.exe
          EDK2_PATH: D:\EDK2
          CHAIN: VS2022
          ARCH: X64
          TRGT: DEBUG
        continue-on-error: true
        run: D:\VENV\Scripts\python.exe -V
